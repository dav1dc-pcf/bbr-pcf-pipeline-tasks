---
opsman_credentials: &opsman_credentials
  SKIP_SSL_VALIDATION: ((skip-ssl-validation))
  OPSMAN_URL: ((opsman-url))
  OPSMAN_USERNAME: ((opsman-username))
  OPSMAN_PASSWORD: ((opsman-password))
  OPSMAN_PRIVATE_KEY: ((opsman-private-key))

scp_credentials: &scp_credentials
  host: ((sftp_output.host))
  user: ((sftp_output.user))
  private_key: ((sftp_output.private_key))
  base_directory: ((sftp_output.base_directory))

jobs:
- name: export-om-installation
  serial: true
  plan:
  - in_parallel:
    - get: bbr-pipeline-tasks-repo
    - get: nightly-backup-trigger
      trigger: true
  - task: export-om-installation
    file: bbr-pipeline-tasks-repo/tasks/export-om-installation/task.yml
    params:
      <<: *opsman_credentials
  - put: om-backup-artifact
    params:
      glob: om-installation/installation_*.zip
      destdir: ((sftp_output.destdir))

- name: bbr-backup-concourse
  serial: true
  plan:
  - in_parallel:
    - get: bbr-pipeline-tasks-repo
    - get: bbr-release
    - get: nightly-backup-trigger
      trigger: true
  - task: check-opsman-status
    file: bbr-pipeline-tasks-repo/tasks/check-opsman-status/task.yml
    params:
      <<: *opsman_credentials
  - task: extract-binary
    file: bbr-pipeline-tasks-repo/tasks/extract-bbr-binary/task.yml
  - task: bbr-backup-concourse
    file: bbr-pipeline-tasks-repo/tasks/bbr-backup-ci/task.yml
    params:
      DEPLOYMENT_NAME: ((concourse_deployment))
      <<: *opsman_credentials
    on_failure:
      task: bbr-cleanup-concourse
      file: bbr-pipeline-tasks-repo/tasks/bbr-cleanup-ci/task.yml
      params:
        DEPLOYMENT_NAME: ((concourse_deployment))
        <<: *opsman_credentials
  - put: ci-backup-bucket
    params:
      glob: ci-backup-artifact/ci-backup_*.tar
      destdir: ((sftp_output.destdir))

- name: bbr-backup-director
  serial: true
  plan:
  - in_parallel:
    - get: bbr-pipeline-tasks-repo
    - get: bbr-release
    - get: nightly-backup-trigger
      trigger: true
  - task: check-opsman-status
    file: bbr-pipeline-tasks-repo/tasks/check-opsman-status/task.yml
    params:
      <<: *opsman_credentials
  - task: extract-binary
    file: bbr-pipeline-tasks-repo/tasks/extract-bbr-binary/task.yml
  - task: bbr-backup-director
    file: bbr-pipeline-tasks-repo/tasks/bbr-backup-director/task.yml
    params:
      <<: *opsman_credentials
    on_failure:
      task: bbr-cleanup-director
      file: bbr-pipeline-tasks-repo/tasks/bbr-cleanup-director/task.yml
      params:
        <<: *opsman_credentials
  - put: director-backup-bucket
    params:
      glob: director-backup-artifact/director-backup_*.tar
      destdir: ((sftp_output.destdir))

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: harbor.home.pvt/ci/pivnet-resource
    tag: latest-final
- name: scp
  type: docker-image
  source:
    repository: harbor.home.pvt/ci/scp-resource
    tag: latest

resources:
- name: nightly-backup-trigger
  type: time
  source:
    start: 2:00 AM
    stop: 3:00 AM
    location: America/Toronto

- name: bbr-pipeline-tasks-repo
  type: git
  source:
    uri: ((git.repo_url))
    branch: ((git.branch))
#    tag_filter: ((git.bbr-pipeline-tasks-repo-version))
- name: bbr-release
  type: pivnet
  source:
    api_token: ((pivnet-api-token))
    product_slug: p-bosh-backup-and-restore

- name: om-backup-artifact
  type: scp
  source:
    <<: *scp_credentials
    glob: installation_*.zip
- name: pas-backup-bucket
  type: scp
  source:
    <<: *scp_credentials
    glob: pas-backup_*.tar
- name: director-backup-bucket
  type: scp
  source:
    <<: *scp_credentials
    glob: director-backup_*.tar

# https://github.com/ECSTeam/scp-resource
